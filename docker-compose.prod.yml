version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: projecthub-mcp-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-projecthub}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-projecthub123}
      POSTGRES_DB: ${DB_NAME:-projecthub}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - projecthub-mcp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-projecthub}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: projecthub-mcp-backend
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://${DB_USER:-projecthub}:${DB_PASSWORD:-projecthub123}@postgres:5432/${DB_NAME:-projecthub}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-here}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-30d}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:5173,http://192.168.1.24:5173}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      # Email settings (optional)
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - EMAIL_FROM=${EMAIL_FROM:-noreply@projecthub.local}
      # Redis (optional)
      - REDIS_URL=${REDIS_URL:-redis://:changeme@redis:6379}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - projecthub-mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: projecthub-mcp-frontend
    ports:
      - "${FRONTEND_PORT:-5173}:80"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3001/api}
      - VITE_WS_URL=${VITE_WS_URL:-http://localhost:3001}
    depends_on:
      - backend
    networks:
      - projecthub-mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Redis for caching and sessions
  redis:
    image: redis:8-alpine
    container_name: projecthub-mcp-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis_data:/data
    networks:
      - projecthub-mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Nginx reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   container_name: projecthub-mcp-nginx
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   ports:
  #     - "443:443"
  #     - "80:80"
  #   depends_on:
  #     - frontend
  #     - backend
  #   networks:
  #     - projecthub-mcp-network
  #   restart: unless-stopped

networks:
  projecthub-mcp-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local