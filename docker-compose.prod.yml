version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: projecthub-mcp-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-projecthub}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-projecthub123}
      POSTGRES_DB: ${DB_NAME:-projecthub_mcp}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - projecthub-mcp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-projecthub}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: ghcr.io/anubissbe/projecthub-mcp-backend:latest
    container_name: projecthub-mcp-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-projecthub}
      - DB_PASSWORD=${DB_PASSWORD:-projecthub123}
      - DB_NAME=${DB_NAME:-projecthub_mcp}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-here}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:5173}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - projecthub-mcp-network

  frontend:
    image: ghcr.io/anubissbe/projecthub-mcp-frontend:branded
    container_name: projecthub-mcp-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3001/api}
      - VITE_WS_URL=${VITE_WS_URL:-http://localhost:3001}
    depends_on:
      - backend
    networks:
      - projecthub-mcp-network

networks:
  projecthub-mcp-network:
    driver: bridge

volumes:
  postgres_data: