version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: projecthub-mcp-postgres
    environment:
      POSTGRES_DB: projecthub_mcp
      POSTGRES_USER: projecthub
      POSTGRES_PASSWORD: projecthub_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5433:5432"
    networks:
      - projecthub-mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U projecthub -d projecthub_mcp"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API (Clean version - connects to PostgreSQL)
  backend:
    image: telkombe/projecthub-backend:v4.7.0
    container_name: projecthub-mcp-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://projecthub:projecthub_password@postgres:5432/projecthub_mcp
      CORS_ORIGIN: "*"
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3001
    ports:
      - "3007:3001"
    networks:
      - projecthub-mcp-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend (React App)
  frontend:
    image: telkombe/projecthub-frontend:2.0.0
    container_name: projecthub-mcp-frontend
    environment:
      REACT_APP_API_URL: http://192.168.1.24:3007
    ports:
      - "5174:80"
    networks:
      - projecthub-mcp-network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  projecthub-mcp-network:
    driver: bridge
