version: '3.8'

# ProjectHub Docker Compose Configuration
# 
# IMPORTANT: Create a .env file from .env.example:
#   cp .env.example .env
#   # Edit .env with your configuration
#
# Quick start:
#   cp .env.example .env
#   docker-compose up -d

services:
  postgres:
    image: postgres:15-alpine
    container_name: projecthub-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-projecthub}
      POSTGRES_USER: ${DB_USER:-projecthub}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-your_secure_password}
    volumes:
      - projecthub-db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${DB_EXTERNAL_PORT:-5434}:5432"
    networks:
      - projecthub-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-projecthub}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: anubissbe/projecthub-backend:latest
    container_name: projecthub-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${API_PORT:-3009}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-projecthub}
      DB_USER: ${DB_USER:-projecthub}
      DB_PASSWORD: ${DB_PASSWORD:-your_secure_password}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:8090}
      JWT_SECRET: ${JWT_SECRET:?JWT_SECRET environment variable is required}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
    ports:
      - "${API_PORT:-3009}:${API_PORT:-3009}"
    networks:
      - projecthub-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:${API_PORT:-3009}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: anubissbe/projecthub-frontend:latest
    container_name: projecthub-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      VITE_API_BASE_URL: ${API_BASE_URL:-http://localhost:3009}
    ports:
      - "${FRONTEND_PORT:-8090}:80"
    networks:
      - projecthub-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  projecthub-network:
    driver: bridge

volumes:
  projecthub-db:
    name: projecthub-db