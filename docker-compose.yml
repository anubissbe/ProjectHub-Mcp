version: '3.8'

# ProjectHub Docker Compose Configuration
# 
# IMPORTANT: Create a .env file with:
#   JWT_SECRET=your-secure-random-string-here
#   POSTGRES_PASSWORD=projecthub123 (or your custom password)
#
# Quick start:
#   echo "JWT_SECRET=$(openssl rand -base64 32)" > .env
#   docker-compose up -d

services:
  postgres:
    image: postgres:15-alpine
    container_name: projecthub-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: projecthub
      POSTGRES_USER: projecthub
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-projecthub123}
    volumes:
      - projecthub-db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    networks:
      - projecthub-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U projecthub"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: anubissbe/projecthub-backend:latest
    build:
      context: ./backend-fix
      dockerfile: Dockerfile
    container_name: projecthub-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3010
      # IMPORTANT: Uses container name 'postgres' not localhost or external IP
      DATABASE_URL: postgresql://projecthub:${POSTGRES_PASSWORD:-projecthub123}@postgres:5432/projecthub
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
      # CRITICAL: Must set JWT_SECRET in .env file for security!
      JWT_SECRET: ${JWT_SECRET:?JWT_SECRET environment variable is required}
    ports:
      - "${BACKEND_PORT:-3009}:3010"
    networks:
      - projecthub-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3010/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: anubissbe/projecthub-frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: projecthub-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      API_URL: ${API_URL:-http://localhost:3007}
    ports:
      - "${FRONTEND_PORT:-5174}:80"
    networks:
      - projecthub-network
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  projecthub-network:
    driver: bridge

volumes:
  projecthub-db:
    name: projecthub-db