name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  DOCKERHUB_USERNAME: anubissbe
  IMAGE_NAME: projecthub-mcp

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  test:
    name: 🧪 Test & Validate
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🧪 Validate Backend
        working-directory: ./backend-fix
        run: |
          echo "🔍 Validating backend structure..."
          
          # Check required files
          test -f server.js || { echo "❌ server.js missing"; exit 1; }
          test -f security-utils.js || { echo "❌ security-utils.js missing"; exit 1; }
          test -f Dockerfile || { echo "❌ Dockerfile missing"; exit 1; }
          test -f package.json || { echo "❌ package.json missing"; exit 1; }
          
          # Validate server.js structure
          grep -q "app.post('/api/tasks'" server.js || { echo "❌ Task creation endpoint missing"; exit 1; }
          grep -q "Project selection is required" server.js || { echo "❌ Project validation missing"; exit 1; }
          
          echo "✅ All validations passed!"

      - name: 🏗️ Test Docker Build
        run: |
          echo "🐳 Testing Docker builds..."
          docker build -t test-backend:${{ github.sha }} ./backend-fix
          docker build -t test-frontend:${{ github.sha }} ./frontend
          echo "✅ Docker builds successful!"

      - name: 📝 Generate Test Report
        if: always()
        run: |
          echo "# 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Backend Validation: ✅ Passed" >> $GITHUB_STEP_SUMMARY
          echo "- Docker Builds: ✅ Successful" >> $GITHUB_STEP_SUMMARY
          echo "- Backend Image: test-backend:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend Image: test-frontend:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY

  build-and-publish:
    name: 🐳 Build & Publish
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    timeout-minutes: 20
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host
        
      - name: 🔑 Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔑 Log in to Docker Hub
        if: secrets.DOCKERHUB_TOKEN
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: 🏷️ Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}-backend
            ${{ env.DOCKERHUB_USERNAME }}/projecthub-backend
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=ProjectHub Backend
            org.opencontainers.image.description=ProjectHub API backend with task validation
            org.opencontainers.image.vendor=ProjectHub
            
      - name: 🏗️ Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: ./backend-fix
          file: ./backend-fix/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ github.event.repository.updated_at }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ steps.meta.outputs.version }}

      - name: 📝 Generate Build Report
        run: |
          echo "# 🐳 Build & Publish Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📦 Published Images" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### GitHub Container Registry" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}-backend:latest" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Docker Hub" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "docker.io/${{ env.DOCKERHUB_USERNAME }}/projecthub-backend:latest" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🔍 Image Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Digest**: \`${{ steps.build.outputs.digest }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Platforms**: linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Date**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY

  deploy-notification:
    name: 📢 Deployment Status
    runs-on: ubuntu-latest
    needs: [build-and-publish]
    if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 5
    
    steps:
      - name: 📝 Generate Deployment Summary
        run: |
          echo "# 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.build-and-publish.result }}" == "success" ]]; then
            echo "## ✅ Deployment Successful!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "The latest version has been deployed to:" >> $GITHUB_STEP_SUMMARY
            echo "- GitHub Container Registry ✅" >> $GITHUB_STEP_SUMMARY
            echo "- Docker Hub ✅" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🎯 Quick Start" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
            echo "docker run -d -p 3009:3010 ghcr.io/${{ github.repository_owner }}/projecthub-mcp-backend:latest" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ❌ Deployment Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please check the workflow logs for details." >> $GITHUB_STEP_SUMMARY
          fi