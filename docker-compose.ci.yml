version: '3.8'

services:
  postgres:
    image: postgres:17
    container_name: task-management-postgres
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_pass
      - POSTGRES_DB=test_db
    ports:
      - "5432:5432"
    networks:
      - task-management-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_db"]
      interval: 5s
      timeout: 10s
      retries: 12
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task-management-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=test
      - PORT=3001
      - DATABASE_URL=postgresql://test_user:test_pass@postgres:5432/test_db
      - CORS_ORIGIN=http://localhost:5173
    networks:
      - task-management-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 5s
      timeout: 10s
      retries: 15
      start_period: 45s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task-management-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3001/api
      - VITE_WS_URL=http://localhost:3001
    networks:
      - task-management-network
    depends_on:
      backend:
        condition: service_healthy

networks:
  task-management-network:
    driver: bridge